apiVersion: v1
kind: Namespace
metadata:
  name: picam
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: picam
  name: pod-reader
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: picam
subjects:
- kind: User
  name: system:serviceaccount:picam:default
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: picam-webapp
  namespace: picam
  labels:
    app: picam-webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: picam-webapp
  template:
    metadata:
      labels:
        app: picam-webapp
    spec:
      nodeSelector:
        kubernetes.io/arch: arm
      containers:
      - name: picam-webapp
        image: bentastic27/picam-webapp:latest
        env:
        - name: INGRESS_HOST
          value: "192.168.1.11"
        ports:
        - containerPort: 5000
        resources:
          limits:
            memory: 60Mi
          requests:
            memory: 30Mi
---
apiVersion: v1
kind: Service
metadata:
  name: picam-webapp
  namespace: picam
spec:
  selector:
    app: picam-webapp
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: picam-ingress
  namespace: picam
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    traefik.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /picam
        backend:
          serviceName: picam-webapp
          servicePort: 5000
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: picam
  namespace: picam
  labels:
    app: picam
spec:
  selector:
    matchLabels:
      app: picam
  template:
    metadata:
      labels:
        app: picam
    spec:
      nodeSelector:
        beansnet.net/cam: "true"
        kubernetes.io/arch: arm
      containers:
      - name: picam
        image: bentastic27/picam:latest
        env:
        - name: CAM_ROTATE
          value: "180"
        - name: CAM_FRAMERATE
          value: "2"
        - name: CAM_RESOLUTION
          value: "640x480"
        resources:
          limits:
            memory: 300Mi
          requests:
            memory: 200Mi
        ports:
        - containerPort: 8000
          hostPort: 8000
        securityContext:
          privileged: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: picam-proxy
  namespace: picam
  labels:
    app: picam-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: picam-proxy
  template:
    metadata:
      labels:
        app: picam-proxy
    spec:
      nodeSelector:
        kubernetes.io/arch: arm
      containers:
      - name: picam-proxy
        image: bentastic27/picam-proxy:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: picam-proxy
  namespace: picam
spec:
  selector:
    app: picam-proxy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: picam-proxy-ingress
  namespace: picam
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    traefik.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /picam-proxy
        backend:
          serviceName: picam-proxy
          servicePort: 80