apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: {{ .Release.Namespace }}
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      nodeSelector:
        beansnet.net/wired: "true"
      containers:
      - name: webapp
        image: {{ .Values.webapp.repository }}:{{ .Values.webapp.tag }}
        env:
        - name: INGRESS_HOST
          value: {{ .Values.ingress.hostName }}
        ports:
        - containerPort: 5000
        resources:
          limits:
            memory: 60Mi
          requests:
            memory: 30Mi

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: picam
  namespace: {{ .Release.Namespace }}
  labels:
    app: picam
spec:
  selector:
    matchLabels:
      app: picam
  template:
    metadata:
      labels:
        app: picam
    spec:
      nodeSelector:
        beansnet.net/cam: "true"
      containers:
      - name: picam
        image: {{ .Values.picam.repository }}:{{ .Values.picam.tag }}
        env:
        - name: CAM_ROTATE
          value: "{{ .Values.picam.rotate }}"
        - name: CAM_FRAMERATE
          value: "{{ .Values.picam.framerate }}"
        - name: CAM_RESOLUTION
          value: "{{ .Values.picam.resolution }}"
        resources:
          limits:
            memory: 300Mi
          requests:
            memory: 200Mi
        ports:
        - containerPort: 8000
        securityContext:
          privileged: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy
  namespace: {{ .Release.Namespace }}
  labels:
    app: proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy
  template:
    metadata:
      labels:
        app: proxy
    spec:
      nodeSelector:
        beansnet.net/wired: "true"
      containers:
      - name: proxy
        image: {{ .Values.proxy.repository }}:{{ .Values.proxy.tag }}
        ports:
        - containerPort: 80